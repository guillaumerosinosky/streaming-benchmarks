version: "3.8"
services:
  jobmanager:
    image: flink:${FLINK_VERSION:-1.16}
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - | 
        FLINK_PROPERTIES=
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory 
        metrics.reporter.prom.port: 9249
        cluster.evenly-spread-out-slots: true    
        rest.flamegraph.enabled: true            
    networks:
      - alloy-test_default
    deploy:
      placement:
        constraints:     
        - node.labels.tier==jobmanager
  taskmanager:
    image: flink:${FLINK_VERSION:-1.16}
    privileged: true
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - | 
        FLINK_PROPERTIES=
        taskmanager.numberOfTaskSlots: 1
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory 
        metrics.reporter.prom.port: 9249
        rest.flamegraph.enabled: true
    networks:
      - alloy-test_default      
    deploy:
      endpoint_mode: dnsrr
      replicas: ${NUM_TM:-4}
      resources:
        limits:
          cpus: '2'
          #memory: 350M    
      placement:
        constraints:     
        - node.labels.tier==taskmanager
  envoy1:
    image: grosinosky/envoy:v1.29-alloy
    configs:
    - source: envoy-edge1
      target: /etc/envoy/envoy.yaml
      #template_driver: golang
    ports:
    - "8001:8001"      
    entrypoint: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml"]
    #entrypoint: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "wasm:debug"]
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:     
        - node.labels.tier==kafka
    networks:
      - alloy-test_default

  zookeeper-edge1:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - alloy-test_default      
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:     
        - node.labels.tier==kafka    

  kafka-edge1:
    image: bitnami/kafka:3.0.2
    depends_on:
      - zookeeper-edge1
    environment: # https://rmoff.net/2018/08/02/kafka-listeners-explained/
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-edge1:2181
      #KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092,PROXY://0.0.0.0:9093,OUTSIDE://0.0.0.0:9095,PROXY_PASSTHROUGH://0.0.0.0:9096
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,PROXY://envoy1:9093,OUTSIDE://localhost:9095,PROXY_PASSTHROUGH://envoy1:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PROXY:PLAINTEXT,OUTSIDE:PLAINTEXT,PROXY_PASSTHROUGH:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: ${NUM_PARTITIONS:-2}
    ports:
    - "9092:9092"
    networks:
      - alloy-test_default      
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:     
        - node.labels.tier==kafka      
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8082:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=edge1
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-edge1:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-edge1:2181 
    networks:
      - alloy-test_default 
    deploy:
      placement:
        constraints:     
        - node.labels.tier==injector        

  redis:
    image: redis:7.2.4
    ports: 
    - "6379:6379"
    restart: always    
    networks:
      - alloy-test_default   
    deploy:
      placement:
        constraints:     
        - node.labels.tier==injector        

  redis-ui:
    image: rediscommander/redis-commander
    environment:
    - REDIS_HOSTS=redis:redis:6379
    networks:
      - alloy-test_default   
    ports:
    - "8083:8081"     
    depends_on:
      - redis
    deploy:
      placement:
        constraints:     
        - node.labels.tier==injector        

configs:   
  envoy-edge1:
    file: ./envoy-alloy.yml
    #template_driver: golang          
networks:
  alloy-test_default:
    name: alloy-test_default  
    external: true